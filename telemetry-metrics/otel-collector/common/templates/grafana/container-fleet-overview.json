{
  "__inputs": [
    {
      "name": "DS_PROMETHEUS",
      "label": "Prometheus",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    },
    {
      "name": "DS_CLOUDWATCH",
      "label": "cloudwatch",
      "description": "",
      "type": "datasource",
      "pluginId": "cloudwatch",
      "pluginName": "CloudWatch"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "datasource",
      "id": "cloudwatch",
      "name": "CloudWatch",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "10.4.1"
    },
    {
      "type": "datasource",
      "id": "prometheus",
      "name": "Prometheus",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "description": "",
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 22,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "**Fleet ID:** <a href=\"/d/container_overview/container-fleet-overview?var-fleet_id=${fleet_id}&from=${__from}&to=${__to}\" target=\"_blank\">${fleet_id}</a><br>\n**Location:** ${location}<br>\n\nRelated dashboards: <a href=\"/d/container_performance/container-performance?var-fleet_id=${fleet_id}&from=${__from}&to=${__to}\" target=\"_blank\">Container performance</a>\n\n**Note:** This dashboard is only for managed container fleets. For managed EC2 fleets see the <a href=\"/d/fleet_overview/fleet-overview\" target=\"_blank\">EC2 fleet overview</a> dashboard\n\nMonitor each metric type for potential issues:\n\n- **Global CCU & Capacity** shows active player count and available game server processes globally for the fleet. Watch for capacity constraints and player distribution across regions.\n\n- **Current averages** shows overall health of the ECS tasks. When performance degrades, check CPU utilization, memory consumption, and network throughput for bottlenecks.\n\n- **Task summary** shows the top 20 highest resource consuming ECS tasks. High utilization patterns require clicking on task IDs to drill down to detailed performance analysis.\n\n- **Network summary** reflects average task connectivity. For latency or connectivity issues, check individual task metrics like Network I/O and error rates.\n\n- **Storage summary** indicates average storage performance of the tasks. Slow response times suggest examining Storage I/O rates at the individual task level.\n\nClick the information icon (â“˜) next to each graph for detailed analysis and troubleshooting steps.",
        "mode": "markdown"
      },
      "pluginVersion": "10.4.1",
      "title": "Dashboard overview",
      "transparent": true,
      "type": "text"
    },
    {
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 23,
      "title": "Global CCU and Capacity (All Locations)",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "#### What it means\nIt shows the number of concurrent users in all the game servers over all the instances in all locations.\n\n#### Why is it important?\n- Shows player distribution\n- Helps in capacity planning",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 28,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 24,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "disableTextWrap": false,
          "editorMode": "builder",
          "expr": "sum(server_players{fleet_id=\"$fleet_id\"})",
          "fullMetaSearch": false,
          "includeNullMetadata": true,
          "instant": false,
          "legendFormat": "Total",
          "range": true,
          "refId": "A",
          "useBackend": false
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "disableTextWrap": false,
          "editorMode": "builder",
          "expr": "sum by(cloud_region) (server_players{fleet_id=\"$fleet_id\"})",
          "fullMetaSearch": false,
          "hide": false,
          "includeNullMetadata": true,
          "instant": false,
          "legendFormat": "{{cloud_region}}",
          "range": true,
          "refId": "B",
          "useBackend": false
        }
      ],
      "title": "CCU",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "#### What it means\nIt shows the number of concurrent users in all the game servers over all the instances in all locations globally.\n\n#### Why is it important?\n- Shows player distribution\n- Helps in capacity planning",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 18
      },
      "id": 25,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "disableTextWrap": false,
          "editorMode": "builder",
          "expr": "sum(server_players{fleet_id=\"$fleet_id\"})",
          "fullMetaSearch": false,
          "includeNullMetadata": true,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A",
          "useBackend": false
        }
      ],
      "title": "Global CCU",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the capacity utilization (%) globally, and the percentage of game servers in-use globally.\n\n#### Why is it important?\n- Indicates there is a bottleneck for onboarding more game sessions\n\n#### What is the root cause?\n- Often, the game servers crash prematurely. Proactively check for the number of crashed game sessions and review the game server logs for the reason.\n- Check the <a href=\"/d/instance_overview/instances-overview?var-instance_type=All&var-fleet_id=${fleet_id}&from=${__from}&to=${__to}\" target=\"_blank\">Instances Overview</a> dashboard for instance metrics for other instances. Sometimes, only a single instance is bad.\n\n#### How to mitigate the issue\n- Consider scaling the fleet to more numbers of instances in a location, and have a look at the \"Location capacity\" section to identify the locations with the highest usage.\n- Consider increasing the number of concurrent process in the runtime configuration of the fleet.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 70
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 18
      },
      "id": 26,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {
            "FleetId": "$fleet_id",
            "Location": "aggregate"
          },
          "expression": "",
          "hide": false,
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 0,
          "metricName": "ActiveGameSessions",
          "metricQueryType": 0,
          "namespace": "AWS/GameLift",
          "period": "",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sqlExpression": "",
          "statistic": "Sum"
        },
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {
            "FleetId": "$fleet_id",
            "Location": "aggregate"
          },
          "expression": "",
          "hide": false,
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 0,
          "metricName": "ActiveServerProcesses",
          "metricQueryType": 0,
          "namespace": "AWS/GameLift",
          "period": "",
          "queryMode": "Metrics",
          "refId": "B",
          "region": "default",
          "sqlExpression": "",
          "statistic": "Sum"
        }
      ],
      "title": "Global Capacity Usage",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "Capacity used",
            "binary": {
              "left": "ActiveGameSessions",
              "operator": "/",
              "right": "ActiveServerProcesses"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            },
            "replaceFields": true
          }
        }
      ],
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the total number of game servers in the fleet that are ready to receive a game session.\n\n#### Why is it important?\nIndicates a bottleneck for onboarding more game sessions.\n\n#### What is the root cause?\n- Often, the game servers crash prematurely. Proactively check for the number of crashed game sessions and review the game server logs for the reason.\n- Check the <a href=\"/d/instance_overview/instances-overview?var-instance_type=All&var-fleet_id=${fleet_id}&from=${__from}&to=${__to}\" target=\"_blank\">Instances Overview</a> dashboard for instance metrics for other instances. Sometimes, only a single instance is bad.\n\n#### How to mitigate the issue\n- Consider scaling the fleet to more instances in a location, and have a look at \"Location capacity\" section to identify the locations with the highest usage.\n- Consider increasing the number of concurrent process in the runtime configuration of the fleet.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 18
      },
      "id": 27,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {
            "FleetId": "$fleet_id",
            "Location": "aggregate"
          },
          "expression": "",
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 0,
          "metricName": "ActiveServerProcesses",
          "metricQueryType": 0,
          "namespace": "AWS/GameLift",
          "period": "",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sqlExpression": "",
          "statistic": "Sum"
        },
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {
            "FleetId": "$fleet_id",
            "Location": "aggregate"
          },
          "expression": "",
          "hide": false,
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 0,
          "metricName": "ActiveGameSessions",
          "metricQueryType": 0,
          "namespace": "AWS/GameLift",
          "period": "",
          "queryMode": "Metrics",
          "refId": "B",
          "region": "default",
          "sqlExpression": "",
          "statistic": "Sum"
        }
      ],
      "title": "Global Capacity Available (Game servers)",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "Capacity available",
            "binary": {
              "left": "ActiveServerProcesses",
              "operator": "-",
              "right": "ActiveGameSessions"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            },
            "replaceFields": true
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the total number of instances in the fleet that are active.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 26
      },
      "id": 28,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "",
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 0,
          "metricName": "ActiveInstances",
          "metricQueryType": 1,
          "namespace": "AWS/GameLift",
          "period": "1m",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sql": {
            "from": {
              "name": "SCHEMA",
              "parameters": [
                {
                  "name": "AWS/GameLift",
                  "type": "functionParameter"
                },
                {
                  "name": "FleetId",
                  "type": "functionParameter"
                },
                {
                  "name": "Location",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "select": {
              "name": "SUM",
              "parameters": [
                {
                  "name": "ActiveInstances",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "where": {
              "expressions": [
                {
                  "operator": {
                    "name": "=",
                    "value": "$fleet_id"
                  },
                  "property": {
                    "name": "FleetId",
                    "type": "string"
                  },
                  "type": "operator"
                },
                {
                  "operator": {
                    "name": "=",
                    "value": "aggregate"
                  },
                  "property": {
                    "name": "Location",
                    "type": "string"
                  },
                  "type": "operator"
                }
              ],
              "type": "and"
            }
          },
          "sqlExpression": "SELECT SUM(ActiveInstances) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id' AND Location = 'aggregate'",
          "statistic": "Average"
        }
      ],
      "title": "Active Instances",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the average percentage of instances in the fleet (all locations) that do not have an active game session running.\n\n#### Why is it important?\nThis should be low in order to do effective cost savings.\n\n#### How to mitigate the issue\n- Identify the location that has idle capacity from the \"Location Capacity\" section.\n- Use auto-scaling policies as mentioned in the [guide](https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-autoscaling.html)\n",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 70
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 26
      },
      "id": 29,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "",
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 0,
          "metricName": "",
          "metricQueryType": 1,
          "namespace": "AWS/GameLift",
          "period": "1m",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sql": {
            "from": {
              "name": "SCHEMA",
              "parameters": [
                {
                  "name": "AWS/GameLift",
                  "type": "functionParameter"
                },
                {
                  "name": "FleetId",
                  "type": "functionParameter"
                },
                {
                  "name": "Location",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "select": {
              "name": "AVG",
              "parameters": [
                {
                  "name": "PercentIdleInstances",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "where": {
              "expressions": [
                {
                  "operator": {
                    "name": "=",
                    "value": "$fleet_id"
                  },
                  "property": {
                    "name": "FleetId",
                    "type": "string"
                  },
                  "type": "operator"
                }
              ],
              "type": "and"
            }
          },
          "sqlExpression": "SELECT AVG(PercentIdleInstances) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id'",
          "statistic": "Average"
        }
      ],
      "title": "Idle Instance %",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the number of instances in the fleet (all locations) that do not have an active game session running.\n\n#### Why is it important?\nThis should be low in order to do effective cost savings.\n\n#### How to mitigate the issue\n- Identify the location that has idle capacity from the \"Location Capacity\" section\n- Use auto-scaling policies as mentioned in the [guide](https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-autoscaling.html)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 26
      },
      "id": 30,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "",
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 0,
          "metricName": "ActiveInstances",
          "metricQueryType": 1,
          "namespace": "AWS/GameLift",
          "period": "1m",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sql": {
            "from": {
              "name": "SCHEMA",
              "parameters": [
                {
                  "name": "AWS/GameLift",
                  "type": "functionParameter"
                },
                {
                  "name": "FleetId",
                  "type": "functionParameter"
                },
                {
                  "name": "Location",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "select": {
              "name": "SUM",
              "parameters": [
                {
                  "name": "IdleInstances",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "where": {
              "expressions": [
                {
                  "operator": {
                    "name": "=",
                    "value": "$fleet_id"
                  },
                  "property": {
                    "name": "FleetId",
                    "type": "string"
                  },
                  "type": "operator"
                }
              ],
              "type": "and"
            }
          },
          "sqlExpression": "SELECT SUM(IdleInstances) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id'",
          "statistic": "Average"
        }
      ],
      "title": "Idle Instances",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the number of game sessions that started across the fleet.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 60000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 34
      },
      "id": 31,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "",
          "id": "",
          "label": "ServerProcessActivations",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 0,
          "metricName": "DesiredInstances",
          "metricQueryType": 1,
          "namespace": "AWS/GameLift",
          "period": "1m",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sql": {
            "from": {
              "name": "SCHEMA",
              "parameters": [
                {
                  "name": "AWS/GameLift",
                  "type": "functionParameter"
                },
                {
                  "name": "FleetId",
                  "type": "functionParameter"
                },
                {
                  "name": "Location",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "select": {
              "name": "SUM",
              "parameters": [
                {
                  "name": "ServerProcessActivations",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "where": {
              "expressions": [
                {
                  "operator": {
                    "name": "=",
                    "value": "$fleet_id"
                  },
                  "property": {
                    "name": "FleetId",
                    "type": "string"
                  },
                  "type": "operator"
                }
              ],
              "type": "and"
            }
          },
          "sqlExpression": "SELECT SUM(ServerProcessActivations) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id'",
          "statistic": "Average"
        }
      ],
      "title": "Game Server Starts",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the number of game sessions that stopped or crashed across the fleet.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 60000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 34
      },
      "id": 32,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "",
          "id": "",
          "label": "ServerProcessTerminations",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 0,
          "metricName": "DesiredInstances",
          "metricQueryType": 1,
          "namespace": "AWS/GameLift",
          "period": "1m",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sql": {
            "from": {
              "name": "SCHEMA",
              "parameters": [
                {
                  "name": "AWS/GameLift",
                  "type": "functionParameter"
                },
                {
                  "name": "FleetId",
                  "type": "functionParameter"
                },
                {
                  "name": "Location",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "select": {
              "name": "SUM",
              "parameters": [
                {
                  "name": "ServerProcessTerminations",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "where": {
              "expressions": [
                {
                  "operator": {
                    "name": "=",
                    "value": "$fleet_id"
                  },
                  "property": {
                    "name": "FleetId",
                    "type": "string"
                  },
                  "type": "operator"
                }
              ],
              "type": "and"
            }
          },
          "sqlExpression": "SELECT SUM(ServerProcessTerminations) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id'",
          "statistic": "Average"
        }
      ],
      "title": "Game Server Stops",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the average percentage of game servers that report healthy to Amazon GameLift Servers across the fleet.\n\n#### Why is it important?\nIf the game servers are not healthy, no game sessions would be placed on them\n\n#### How to mitigate the issue\n- Often, the game servers crash prematurely. Proactively check for the number of crashed game sessions and review the game server logs for the reason.\n- Check the <a href=\"/d/instance_overview/instances-overview?var-instance_type=All&var-fleet_id=${fleet_id}&from=${__from}&to=${__to}\" target=\"_blank\">Instances Overview</a> dashboard for instance metrics. For other instances, sometimes a only single instance is bad.\n\n\n",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 60000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 42
      },
      "id": 33,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "",
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 0,
          "metricName": "DesiredInstances",
          "metricQueryType": 1,
          "namespace": "AWS/GameLift",
          "period": "1m",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sql": {
            "from": {
              "name": "SCHEMA",
              "parameters": [
                {
                  "name": "AWS/GameLift",
                  "type": "functionParameter"
                },
                {
                  "name": "FleetId",
                  "type": "functionParameter"
                },
                {
                  "name": "Location",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "groupBy": {
              "expressions": [
                {
                  "property": {
                    "name": "Location",
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "type": "and"
            },
            "select": {
              "name": "AVG",
              "parameters": [
                {
                  "name": "PercentHealthyServerProcesses",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "where": {
              "expressions": [
                {
                  "operator": {
                    "name": "=",
                    "value": "$fleet_id"
                  },
                  "property": {
                    "name": "FleetId",
                    "type": "string"
                  },
                  "type": "operator"
                }
              ],
              "type": "and"
            }
          },
          "sqlExpression": "SELECT AVG(PercentHealthyServerProcesses) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id' GROUP BY Location",
          "statistic": "Average"
        }
      ],
      "title": "Healthy Game Servers (%)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "#### What it means\nIt shows the number of game servers that crashed across the fleet. \n\n#### Why is it important?\nA high number of game session crashes causes bad player experiences alongside resource waste and unwanted noise.\n\n#### How to mitigate the issue\n- Often, the game servers crash prematurely. Proactively check for the number of crashed game sessions and review the game server logs for the reason.\n- Check the <a href=\"/d/instance_overview/instances-overview?var-instance_type=All&var-fleet_id=${fleet_id}&from=${__from}&to=${__to}\" target=\"_blank\">Instances Overview</a> dashboard for instance metrics. For other instances, sometimes a only single instance is bad.\n\n\n",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 42
      },
      "id": 34,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "disableTextWrap": false,
          "editorMode": "code",
          "expr": "sum by(fleet_id) (game_server_crash{fleet_id=\"$fleet_id\"})\nor (vector(0) * on() group_left(fleet_id) (label_replace(vector(1), \"fleet_id\", \"$fleet_id\", \"\", \"\")))",
          "fullMetaSearch": false,
          "includeNullMetadata": true,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A",
          "useBackend": false
        }
      ],
      "title": "Game Server Crashes",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "#### What it means\nIt shows the game session IDs of the crashed game sessions. Click the link of game session ARN to navigate to the Server Performance dashboard.\n\n#### Why is it important?\nA high number of game session crashes can cause bad player experiences along with resource waste and unwanted noise.\n\n#### How to mitigate the issue\n- Often, the game servers crash prematurely. Proactively check for the number of crashed game sessions and review the game server logs for the reason.\n- Check the <a href=\"/d/instance_overview/instances-overview?var-instance_type=All&var-fleet_id=${fleet_id}&from=${__from}&to=${__to}\" target=\"_blank\">Instances Overview</a> dashboard for instance metrics. For other instances, sometimes a only single instance is bad.",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "aws_ecs_task_id"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Instance Performance Link",
                    "url": "/d/container_performance/container-performance?orgId=${__org.id}&var-fleet_id=${fleet_id}&var-task_id=${__data.fields.aws_ecs_task_id}&from=${__from}&to=${__to}"
                  }
                ]
              },
              {
                "id": "custom.width",
                "value": 250
              },
              {
                "id": "displayName",
                "value": "Task ID"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "session_id"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Server Performance Link",
                    "url": "/d/server_performance_container/container-server-performance?orgId=${__org.id}&var-session_id=${__data.fields.session_id}&from=${__from}&to=${__to}"
                  }
                ]
              },
              {
                "id": "displayName",
                "value": "Game Session ID"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "cloud_region"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Location (AWS Region)"
              },
              {
                "id": "custom.width",
                "value": 200
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "process_pid"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Process PID"
              },
              {
                "id": "custom.width",
                "value": 200
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 50
      },
      "id": 35,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "disableTextWrap": false,
          "editorMode": "code",
          "expr": "game_server_crash{fleet_id=\"$fleet_id\"}",
          "format": "table",
          "fullMetaSearch": false,
          "includeNullMetadata": true,
          "instant": false,
          "range": true,
          "refId": "A",
          "useBackend": false
        }
      ],
      "title": "Crashed Game Sessions",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "aws_ecs_task_id": {
                "aggregations": [],
                "operation": "groupby"
              },
              "cloud_region": {
                "aggregations": [],
                "operation": "groupby"
              },
              "fleet_id": {
                "aggregations": []
              },
              "process_pid": {
                "aggregations": [],
                "operation": "groupby"
              },
              "session_id": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {
              "game_session_id": 1,
              "host_id": 0
            },
            "renameByName": {
              "game_session_id": "Game Session ID",
              "host_id": "Compute Name (Instance ID)"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 58
      },
      "id": 15,
      "panels": [],
      "title": "Current averages",
      "type": "row"
    },
    {
      "description": "Current CPU utilization across all ECS tasks in the fleet.\n\n**What to look for:**\n- Values consistently above 70% indicate high CPU usage\n- Values above 85% suggest CPU bottlenecks\n- Sudden spikes may indicate inefficient code or resource contention\n\n**Troubleshooting:**\n- Check individual task performance dashboard for details\n- Review game server CPU usage patterns\n- Consider task resource limits and requests",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "orange",
                "value": 70
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 59
      },
      "id": 1,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "100 * (rate(ecs_task_cpu_usage_total_Nanoseconds{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"}[$__rate_interval]) / rate(ecs_task_cpu_usage_system_Nanoseconds{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"}[$__rate_interval]))",
          "refId": "A"
        }
      ],
      "title": "CPU usage",
      "type": "gauge"
    },
    {
      "description": "Current memory utilization across all ECS tasks in the fleet.\n\n**What to look for:**\n- Values consistently above 70% indicate high memory usage\n- Values above 85% suggest memory pressure\n- Sudden increases may indicate memory leaks\n\n**Troubleshooting:**\n- Check individual task performance dashboard for details\n- Review game server memory usage patterns\n- Monitor for memory leaks in game sessions",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "orange",
                "value": 70
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 6,
        "y": 59
      },
      "id": 2,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "avg(ecs_task_memory_utilized_Megabytes{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"} / ecs_task_memory_reserved_Megabytes{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"})",
          "refId": "A"
        }
      ],
      "title": "Memory usage",
      "type": "gauge"
    },
    {
      "description": "Current network receive rate across all ECS tasks in the fleet.\n\n**What to look for:**\n- Sustained high rates may indicate heavy network traffic\n- Sudden drops could suggest connectivity issues\n- Compare with transmit rates for traffic patterns\n\n**Troubleshooting:**\n- Check network error rates for packet loss\n- Review game server network usage patterns\n- Monitor for network bottlenecks",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "binBps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 59
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "avg(ecs_task_network_rate_rx_Bytes_per_Second{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"})",
          "legendFormat": "Receive",
          "refId": "A"
        }
      ],
      "title": "Network in",
      "type": "timeseries"
    },
    {
      "description": "Current network transmit rate across all ECS tasks in the fleet.\n\n**What to look for:**\n- Sustained high rates may indicate heavy network traffic\n- Sudden drops could suggest connectivity issues\n- Compare with receive rates for traffic patterns\n\n**Troubleshooting:**\n- Check network error rates for packet loss\n- Review game server network usage patterns\n- Monitor for network bottlenecks",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "binBps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 59
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "avg(ecs_task_network_rate_tx_Bytes_per_Second{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"})",
          "legendFormat": "Transmit",
          "refId": "A"
        }
      ],
      "title": "Network out",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 67
      },
      "id": 16,
      "panels": [],
      "title": "Task summary",
      "type": "row"
    },
    {
      "description": "Top 20 ECS tasks by CPU utilization. High values indicate tasks under heavy computational load.\n\n**What to look for:**\n- Tasks consistently using >70% CPU\n- Uneven CPU distribution across tasks\n- Tasks with unusually high CPU spikes\n\n**Troubleshooting:**\n- Click task ID to drill down to detailed performance\n- Check if high CPU tasks correspond to busy game sessions\n- Review task resource limits and requests",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "aws_ecs_task_id"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Task ID"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "View Task Performance",
                    "url": "/d/container_performance/container-performance?var-fleet_id=${fleet_id}&var-task_id=${__data.fields.aws_ecs_task_id}&${__url_time_range}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (max)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Max usage"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (mean)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Average usage"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 68
      },
      "id": 10,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "CPU Usage"
          }
        ]
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "100 * (rate(ecs_task_cpu_usage_total_Nanoseconds{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"}[$__rate_interval]) / rate(ecs_task_cpu_usage_system_Nanoseconds{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"}[$__rate_interval]))",
          "format": "table",
          "refId": "A"
        }
      ],
      "title": "Top 20 ECS tasks by CPU consumption",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Value": {
                "aggregations": [
                  "max",
                  "mean"
                ],
                "operation": "aggregate"
              },
              "aws_ecs_task_id": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "Value (mean)"
              }
            ]
          }
        },
        {
          "id": "limit",
          "options": {
            "limitField": 20
          }
        }
      ],
      "type": "table"
    },
    {
      "description": "Top 20 ECS tasks by memory utilization. High values indicate tasks with heavy memory usage.\n\n**What to look for:**\n- Tasks consistently using >70% memory\n- Uneven memory distribution across tasks\n- Tasks approaching memory limits\n\n**Troubleshooting:**\n- Click task ID to drill down to detailed performance\n- Check if high memory tasks correspond to active game sessions\n- Monitor for memory leaks in long-running tasks",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decmbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "aws_ecs_task_id"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Task ID"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "View Task Performance",
                    "url": "/d/container_performance/container-performance?var-fleet_id=${fleet_id}&var-task_id=${__data.fields.aws_ecs_task_id}&${__url_time_range}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (max)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Max usage"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (mean)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Average usage"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 68
      },
      "id": 11,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Memory Usage"
          }
        ]
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "avg by (aws_ecs_task_id) (ecs_task_memory_utilized_Megabytes{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"})",
          "format": "table",
          "refId": "A"
        }
      ],
      "title": "Top 20 ECS tasks by memory consumption",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Value": {
                "aggregations": [
                  "max",
                  "mean"
                ],
                "operation": "aggregate"
              },
              "aws_ecs_task_id": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "Value (mean)"
              }
            ]
          }
        },
        {
          "id": "limit",
          "options": {
            "limitField": 20
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 76
      },
      "id": 17,
      "panels": [],
      "title": "Network summary",
      "type": "row"
    },
    {
      "description": "Network receive rates across all containers. Shows inbound traffic patterns.\n\n**What to look for:**\n- Sustained high rates indicating heavy network load\n- Patterns correlating with game activity\n- Sudden drops suggesting connectivity issues\n\n**Troubleshooting:**\n- Compare with network error rates\n- Check individual container performance for details\n- Monitor for network bottlenecks",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "binBps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 77
      },
      "id": 12,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "avg(ecs_task_network_rate_rx_Bytes_per_Second{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"})",
          "legendFormat": "Average",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "quantile(0.90, ecs_task_network_rate_rx_Bytes_per_Second{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"})",
          "legendFormat": "P90",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "quantile(0.95, ecs_task_network_rate_rx_Bytes_per_Second{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"})",
          "legendFormat": "P95",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "quantile(0.99, ecs_task_network_rate_rx_Bytes_per_Second{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"})",
          "legendFormat": "P99",
          "refId": "D"
        }
      ],
      "title": "Network Receive Rates",
      "type": "timeseries"
    },
    {
      "description": "Network transmit rates across all containers. Shows outbound traffic patterns.\n\n**What to look for:**\n- Sustained high rates indicating heavy network load\n- Patterns correlating with game activity\n- Sudden drops suggesting connectivity issues\n\n**Troubleshooting:**\n- Compare with network error rates\n- Check individual container performance for details\n- Monitor for network bottlenecks",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "binBps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 77
      },
      "id": 13,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "avg(ecs_task_network_rate_tx_Bytes_per_Second{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"})",
          "legendFormat": "Average",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "quantile(0.90, ecs_task_network_rate_tx_Bytes_per_Second{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"})",
          "legendFormat": "P90",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "quantile(0.95, ecs_task_network_rate_tx_Bytes_per_Second{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"})",
          "legendFormat": "P95",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "quantile(0.99, ecs_task_network_rate_tx_Bytes_per_Second{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"})",
          "legendFormat": "P99",
          "refId": "D"
        }
      ],
      "title": "Network Transmit Rates",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 85
      },
      "id": 18,
      "panels": [],
      "title": "Storage summary",
      "type": "row"
    },
    {
      "description": "Storage read rates across all containers. Shows storage read patterns.\n\n**What to look for:**\n- High sustained read rates during game sessions\n- Patterns correlating with game state changes\n- Sudden drops suggesting storage issues\n\n**Troubleshooting:**\n- Check individual container performance for details\n- Monitor for storage bottlenecks\n- Review game data loading patterns",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "binBps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 86
      },
      "id": 14,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "avg(rate(ecs_task_storage_read_bytes_Bytes{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"}[$__rate_interval]))",
          "legendFormat": "Average",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "quantile(0.90, rate(ecs_task_storage_read_bytes_Bytes{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"}[$__rate_interval]))",
          "legendFormat": "P90",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "quantile(0.95, rate(ecs_task_storage_read_bytes_Bytes{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"}[$__rate_interval]))",
          "legendFormat": "P95",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "quantile(0.99, rate(ecs_task_storage_read_bytes_Bytes{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"}[$__rate_interval]))",
          "legendFormat": "P99",
          "refId": "D"
        }
      ],
      "title": "Storage Read Rates",
      "type": "timeseries"
    },
    {
      "description": "Storage write rates across all containers. Shows storage write patterns.\n\n**What to look for:**\n- High sustained write rates during game sessions\n- Patterns correlating with game state saves\n- Sudden drops suggesting storage issues\n\n**Troubleshooting:**\n- Check individual container performance for details\n- Monitor for storage bottlenecks\n- Review game data persistence patterns",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "binBps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 86
      },
      "id": 20,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "avg(rate(ecs_task_storage_write_bytes_Bytes{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"}[$__rate_interval]))",
          "legendFormat": "Average",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "quantile(0.90, rate(ecs_task_storage_write_bytes_Bytes{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"}[$__rate_interval]))",
          "legendFormat": "P90",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "quantile(0.95, rate(ecs_task_storage_write_bytes_Bytes{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"}[$__rate_interval]))",
          "legendFormat": "P95",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "expr": "quantile(0.99, rate(ecs_task_storage_write_bytes_Bytes{fleet_id=\"$fleet_id\", cloud_region=~\"$location\"}[$__rate_interval]))",
          "legendFormat": "P99",
          "refId": "D"
        }
      ],
      "title": "Storage Write Rates",
      "type": "timeseries"
    }
  ],
  "refresh": "30s",
  "schemaVersion": 39,
  "tags": [
    "gamelift",
    "container",
    "fleet",
    "overview"
  ],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_PROMETHEUS}"
        },
        "definition": "",
        "hide": 0,
        "includeAll": false,
        "label": "Fleet ID",
        "multi": false,
        "name": "fleet_id",
        "options": [],
        "query": "label_values(ecs_task_cpu_utilized_None, fleet_id)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_PROMETHEUS}"
        },
        "definition": "",
        "hide": 0,
        "includeAll": true,
        "label": "Location",
        "multi": true,
        "name": "location",
        "options": [],
        "query": "label_values(ecs_task_cpu_utilized_None{fleet_id=\"$fleet_id\"}, cloud_region)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Container Fleet Overview",
  "uid": "container_overview",
  "version": 3,
  "weekStart": ""
}
