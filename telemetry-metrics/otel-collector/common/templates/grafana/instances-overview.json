{
  "__inputs": [
    {
      "name": "DS_CLOUDWATCH",
      "label": "cloudwatch",
      "description": "",
      "type": "datasource",
      "pluginId": "cloudwatch",
      "pluginName": "CloudWatch"
    },
    {
      "name": "DS_PROMETHEUS",
      "label": "Prometheus",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "datasource",
      "id": "cloudwatch",
      "name": "CloudWatch",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "10.4.1"
    },
    {
      "type": "datasource",
      "id": "prometheus",
      "name": "Prometheus",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "description": "",
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 22,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "**Fleet ID:** <a href=\"/d/fleet_overview/fleet-overview?var-fleet_id=${fleet_id}&from=${__from}&to=${__to}\" target=\"_blank\">${fleet_id}</a><br>\n**Instance Type:** </span> <span style=\"text-transform: uppercase;\">${instance_type_of_fleet}</span>\n\nRelated dashboards: <a href=\"/d/fleet_overview/fleet-overview?var-fleet_id=${fleet_id}&from=${__from}&to=${__to}\" target=\"_blank\">EC2 fleet overview</a>\n\n**Note:** This dashboard is only for EC2 fleets, for container fleets see the <a href=\"/d/container_overview/container-overview\" target=\"_blank\">container fleet overview</a> dashboard\n\nMonitor each metric type for potential issues:\n\n- **Current averages** shows overall health of the instances. When performance degrades, check CPU usage, memory consumption, network and disk consumption for bottlenecks.\n\n- **Instance summary** tracks average resource usage by instances. High utilization patterns require checking induvidual instance metrics and resource distribution like CPU and memory.\n\n- **Network summary** reflects average instance connectivity. For latency or connectivity issues, check induvidual instance metrics like Network I/O and Packet rates.\n\n- **Disk summary** indicates average disk performance of the instances. Slow response times suggest examining Disk operations, I/O wait times, and Pending operations at the induvidual instance level.\n\nClick the information icon (â“˜) next to each graph for detailed analysis and troubleshooting steps.",
        "mode": "markdown"
      },
      "pluginVersion": "10.4.1",
      "title": "Dashboard overview",
      "transparent": true,
      "type": "text"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 10,
      "panels": [],
      "title": "Current averages",
      "type": "row"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nReal-time gauges show average processor utilization across all instances.\n\n#### Why is it important?\nIt's critical for identifying immediate resource constraints that affect game server performance.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 70
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 10
      },
      "id": 2,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "",
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 0,
          "metricName": "CPUUtilization",
          "metricQueryType": 1,
          "namespace": "AWS/GameLift",
          "period": "",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sql": {
            "from": {
              "name": "SCHEMA",
              "parameters": [
                {
                  "name": "AWS/GameLift",
                  "type": "functionParameter"
                },
                {
                  "name": "FleetId",
                  "type": "functionParameter"
                },
                {
                  "name": "Location",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "select": {
              "name": "AVG",
              "parameters": [
                {
                  "name": "CPUUtilization",
                  "type": "functionParameter"
                }
              ],
              "type": "function"
            },
            "where": {
              "expressions": [
                {
                  "operator": {
                    "name": "=",
                    "value": "$fleet_id"
                  },
                  "property": {
                    "name": "FleetId",
                    "type": "string"
                  },
                  "type": "operator"
                },
                {
                  "operator": {
                    "name": "=",
                    "value": "aggregate"
                  },
                  "property": {
                    "name": "Location",
                    "type": "string"
                  },
                  "type": "operator"
                }
              ],
              "type": "and"
            }
          },
          "sqlExpression": "SELECT AVG(CPUUtilization) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id' AND Location = 'aggregate'",
          "statistic": "Average"
        }
      ],
      "title": "CPU usage",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the average rate of incoming network traffic across all instances.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 10
      },
      "id": 4,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "SELECT AVG(NetworkIn) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id'",
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 1,
          "metricName": "",
          "metricQueryType": 0,
          "namespace": "",
          "period": "",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sqlExpression": "",
          "statistic": "Average"
        }
      ],
      "title": "Network in",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the average rate of outgoing network traffic across all instances.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 10
      },
      "id": 5,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "SELECT AVG(NetworkOut) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id'",
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 1,
          "metricName": "",
          "metricQueryType": 0,
          "namespace": "",
          "period": "",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sqlExpression": "",
          "statistic": "Average"
        }
      ],
      "title": "Network out",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the average rate of disk read operations across all instances.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "ops"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 18
      },
      "id": 6,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "SELECT AVG(DiskReadOps) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id'",
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 1,
          "metricName": "",
          "metricQueryType": 0,
          "namespace": "",
          "period": "",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sqlExpression": "",
          "statistic": "Average"
        }
      ],
      "title": "Disk read ops",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the average rate of disk read bytes across all instances.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 6,
        "y": 18
      },
      "id": 9,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "",
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 1,
          "metricName": "",
          "metricQueryType": 1,
          "namespace": "",
          "period": "",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sqlExpression": "SELECT AVG(DiskReadBytes) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id'",
          "statistic": "Average"
        }
      ],
      "title": "Disk read bytes",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the average rate of disk write operations across all instances.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "ops"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 18
      },
      "id": 7,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "SELECT AVG(DiskWriteOps) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id'",
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 1,
          "metricName": "",
          "metricQueryType": 0,
          "namespace": "",
          "period": "",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sqlExpression": "",
          "statistic": "Average"
        }
      ],
      "title": "Disk write ops",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "cloudwatch",
        "uid": "${DS_CLOUDWATCH}"
      },
      "description": "#### What it means\nIt shows the average rate of disk write bytes across all instances.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 18
      },
      "id": 8,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "cloudwatch",
            "uid": "${DS_CLOUDWATCH}"
          },
          "dimensions": {},
          "expression": "",
          "id": "",
          "label": "",
          "logGroups": [],
          "matchExact": true,
          "metricEditorMode": 1,
          "metricName": "",
          "metricQueryType": 1,
          "namespace": "",
          "period": "",
          "queryMode": "Metrics",
          "refId": "A",
          "region": "default",
          "sqlExpression": "SELECT AVG(DiskWriteBytes) FROM SCHEMA(\"AWS/GameLift\", FleetId, Location) WHERE FleetId = '$fleet_id'",
          "statistic": "Average"
        }
      ],
      "title": "Disk write bytes",
      "type": "stat"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 26
      },
      "id": 11,
      "panels": [],
      "title": "Instance summary",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "#### What it means\nIt shows the average processor utilization across all instances.\n\n#### Why is it important?\nIt impacts player experience and server tick rate.\n\n#### How to identify the root cause\n- Investigate if a specific instance is resulting in a high average with the help of the table beside it.\n- Check if it is caused by a specific game session or all game sessions by checking the instance performance graph.\n- Investigate the game session graphs to figure out if the game server build is causing problems.\n\n#### How to mitigate the issue\n- Adjust the number of instances in the location.\n- Adjust the number of concurrent game servers running on the instance.\n- Create a new fleet with a different instance type.\n- Make changes to optimize the game server code.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 27
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "100 * (1 - avg(\n  avg by (host_id) ( # Step 2: Average across hosts\n    avg by (host_id) ( # Step 1: Average across CPUs per host\n      rate(system_cpu_time_seconds_total{\n        state=\"idle\",\n        cloud_region=~\"${location:regex}\",\n        fleet_id=\"$fleet_id\"\n      }[$__rate_interval])\n    )\n  )\n))",
          "instant": false,
          "legendFormat": "Mean",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "100 * (1 - min(\n    avg by (host_id) (\n      rate(system_cpu_time_seconds_total{\n        state=\"idle\",\n        cloud_region=~\"${location:regex}\",\n        fleet_id=\"$fleet_id\"\n      }[$__rate_interval])\n    )\n))",
          "hide": false,
          "instant": false,
          "legendFormat": "Max",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "100 * (1 - max(\n    avg by (host_id) (\n      rate(system_cpu_time_seconds_total{\n        state=\"idle\",\n        cloud_region=~\"${location:regex}\",\n        fleet_id=\"$fleet_id\"\n      }[$__rate_interval])\n    )\n))",
          "hide": false,
          "instant": false,
          "legendFormat": "Min",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "100 * (1 - quantile(0.01,\n    avg by (host_id) (\n      rate(system_cpu_time_seconds_total{\n        state=\"idle\",\n        cloud_region=~\"${location:regex}\",\n        fleet_id=\"$fleet_id\"\n      }[$__rate_interval])\n    )\n))",
          "hide": false,
          "instant": false,
          "legendFormat": "P99",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "100 * (1 - quantile(0.05,\n    avg by (host_id) (\n      rate(system_cpu_time_seconds_total{\n        state=\"idle\",\n        cloud_region=~\"${location:regex}\",\n        fleet_id=\"$fleet_id\"\n      }[$__rate_interval])\n    )\n))",
          "hide": false,
          "instant": false,
          "legendFormat": "P95",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "100 * (1 - quantile(0.10,\n    avg by (host_id) (\n      rate(system_cpu_time_seconds_total{\n        state=\"idle\",\n        cloud_region=~\"${location:regex}\",\n        fleet_id=\"$fleet_id\"\n      }[$__rate_interval])\n    )\n))",
          "hide": false,
          "instant": false,
          "legendFormat": "P90",
          "range": true,
          "refId": "F"
        }
      ],
      "title": "CPU usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "host_id"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Instance ID"
              },
              {
                "id": "custom.filterable"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "",
                    "url": "/d/instance_performance?orgId=${__org.id}&var-instance_id=${__data.fields.host_id}&from=${__from}&to=${__to}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (max)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Max usage"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (mean)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Average usage"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 27
      },
      "id": 25,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "100 * (1 - avg by (host_id) (\n    avg by (host_id) (\n      rate(system_cpu_time_seconds_total{\n        state=\"idle\",\n        cloud_region=~\"${location:regex}\",\n        fleet_id=\"$fleet_id\"\n      }[$__rate_interval])\n    )\n  )\n)\n\n\n\n\n\n\n",
          "format": "table",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Top 20 EC2 instances by CPU consumption",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Value": {
                "aggregations": [
                  "max",
                  "mean"
                ],
                "operation": "aggregate"
              },
              "host_id": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "Value (mean)"
              }
            ]
          }
        },
        {
          "id": "limit",
          "options": {
            "limitField": 20
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "#### What it means\nIt shows the average memory utilization across all instances.\n\n#### Why is it important?\nImpacts player experience and critical for identifying immediate resource constraints affecting game server performance\n\n#### How to identify the root cause\n- Investigate if a specific instance is resulting in a high average with the help of the table beside.\n- Check if it is caused by a specific game session or all game sessions by checking the instance performance graph.\n- Investigate the game session graphs to figure out if the game server build is causing problems.\n\n#### How to mitigate the issue\n- Adjust the number of instances in the location.\n- Adjust the number of concurrent game servers running on the instance.\n- Create a new fleet with a different instance type.\n- Make changes to optimize game server code.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 35
      },
      "id": 23,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "avg(\n  sum by (host_id) (\n    system_memory_usage_bytes{\n      state=\"used\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }\n  )\n)",
          "instant": false,
          "legendFormat": "Mean",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(\n  sum by (host_id) (\n    system_memory_usage_bytes{\n      state=\"used\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Max",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "min(\n  sum by (host_id) (\n    system_memory_usage_bytes{\n      state=\"used\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Min",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.99,\n  sum by (host_id) (\n    system_memory_usage_bytes{\n      state=\"used\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P99",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.95,\n  sum by (host_id) (\n    system_memory_usage_bytes{\n      state=\"used\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P95",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.90,\n  sum by (host_id) (\n    system_memory_usage_bytes{\n      state=\"used\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P90",
          "range": true,
          "refId": "F"
        }
      ],
      "title": "Memory usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "host_id"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Instance ID"
              },
              {
                "id": "custom.filterable"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "",
                    "url": "/d/instance_performance?orgId=${__org.id}&var-instance_id=${__data.fields.host_id}&from=${__from}&to=${__to}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (max)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Max usage"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (mean)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Average usage"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 35
      },
      "id": 24,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum by (host_id) (\n  system_memory_usage_bytes{\n    state=\"used\",\n    cloud_region=~\"${location:regex}\",\n    fleet_id=\"$fleet_id\"\n  }\n)",
          "format": "table",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Top 20 EC2 instances by memory consumption",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Value": {
                "aggregations": [
                  "max",
                  "mean"
                ],
                "operation": "aggregate"
              },
              "host_id": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "Value (mean)"
              }
            ]
          }
        },
        {
          "id": "limit",
          "options": {
            "limitField": 20
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 43
      },
      "id": 14,
      "panels": [],
      "title": "Network summary",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "#### What it means\nIt shows the average rate of incoming network traffic across all instances.\n\n#### Why is it important?\n- Monitors network health\n- Identifies connectivity issues\n- Helps diagnose latency problems\n\n#### How to identify the root cause\n- Investigate the game session graphs to figure out if the game server build is causing problems.\n- Refer to the table beside it and check the instance performance graphs.\n- Check if it is caused by a specific game session or all game sessions on the specific instance.\n\n#### How to mitigate the issue\n- Adjust the number of concurrent game servers running on the instance\n- Adjust the instance type of the fleet\n- Make changes to optimize game server code",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 44
      },
      "id": 15,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "avg(\n  sum by (host_id) (\n    rate(system_network_io_bytes_total{\n      host_id=~\".*\",\n      cloud_region=~\"${location:regex}\",\n      direction=\"receive\",\n      device=~\".*\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "instant": false,
          "legendFormat": "Mean",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(\n  sum by (host_id) (\n    rate(system_network_io_bytes_total{\n      host_id=~\".*\",\n      cloud_region=~\"${location:regex}\",\n      direction=\"receive\",\n      device=~\".*\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Max",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "min(\n  sum by (host_id) (\n    rate(system_network_io_bytes_total{\n      host_id=~\".*\",\n      cloud_region=~\"${location:regex}\",\n      direction=\"receive\",\n      device=~\".*\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Min",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.99,\n  sum by (host_id) (\n    rate(system_network_io_bytes_total{\n      host_id=~\".*\",\n      cloud_region=~\"${location:regex}\",\n      direction=\"receive\",\n      device=~\".*\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P99",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.95,\n  sum by (host_id) (\n    rate(system_network_io_bytes_total{\n      host_id=~\".*\",\n      cloud_region=~\"${location:regex}\",\n      direction=\"receive\",\n      device=~\".*\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P95",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.90,\n  sum by (host_id) (\n    rate(system_network_io_bytes_total{\n      host_id=~\".*\",\n      cloud_region=~\"${location:regex}\",\n      direction=\"receive\",\n      device=~\".*\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P90",
          "range": true,
          "refId": "F"
        }
      ],
      "title": "Network in",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "host_id"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Instance ID"
              },
              {
                "id": "custom.filterable"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "",
                    "url": "/d/instance_performance?orgId=${__org.id}&var-instance_id=${__data.fields.host_id}&from=${__from}&to=${__to}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (max)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Max usage"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (mean)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Average usage"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 44
      },
      "id": 26,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum by (host_id) (\n  rate(system_network_io_bytes_total{\n    host_id=~\".*\",\n    cloud_region=~\"${location:regex}\",\n    direction=\"receive\",\n    device=~\".*\",\n    fleet_id=\"$fleet_id\"\n  }[$__rate_interval])\n)",
          "format": "table",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Top 20 EC2 instances by Network In consumption",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Value": {
                "aggregations": [
                  "max",
                  "mean"
                ],
                "operation": "aggregate"
              },
              "host_id": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "Value (mean)"
              }
            ]
          }
        },
        {
          "id": "limit",
          "options": {
            "limitField": 20
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "#### What it means\nIt shows the average rate of outgoing network traffic across all instances.\n\n#### Why is it important?\n- Monitors network health\n- Identifies connectivity issues\n- Helps diagnose latency problems\n\n#### How to identify the root cause\n- Investigate the game session graphs to figure out if the game server build is causing problems.\n- Refer to the table it beside and check the instance performance graphs.\n- Check if it is caused by a specific game session or all game sessions on the specific instance.\n\n#### How to mitigate the issue\n- Adjust the number of concurrent game servers running on the instance\n- Adjust the instance type of the fleet\n- Make changes to optimize game server code",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 52
      },
      "id": 18,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "avg(\n  sum by (host_id) (\n    rate(system_network_io_bytes_total{\n      host_id=~\".*\",\n      cloud_region=~\"${location:regex}\",\n      direction=\"transmit\",\n      device=~\".*\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "instant": false,
          "legendFormat": "Mean",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(\n  sum by (host_id) (\n    rate(system_network_io_bytes_total{\n      host_id=~\".*\",\n      cloud_region=~\"${location:regex}\",\n      direction=\"transmit\",\n      device=~\".*\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Max",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "min(\n  sum by (host_id) (\n    rate(system_network_io_bytes_total{\n      host_id=~\".*\",\n      cloud_region=~\"${location:regex}\",\n      direction=\"transmit\",\n      device=~\".*\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Min",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.99,\n  sum by (host_id) (\n    rate(system_network_io_bytes_total{\n      host_id=~\".*\",\n      cloud_region=~\"${location:regex}\",\n      direction=\"transmit\",\n      device=~\".*\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P99",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.95,\n  sum by (host_id) (\n    rate(system_network_io_bytes_total{\n      host_id=~\".*\",\n      cloud_region=~\"${location:regex}\",\n      direction=\"transmit\",\n      device=~\".*\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P95",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.90,\n  sum by (host_id) (\n    rate(system_network_io_bytes_total{\n      host_id=~\".*\",\n      cloud_region=~\"${location:regex}\",\n      direction=\"transmit\",\n      device=~\".*\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P90",
          "range": true,
          "refId": "F"
        }
      ],
      "title": "Network out",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "host_id"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Instance ID"
              },
              {
                "id": "custom.filterable"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "",
                    "url": "/d/instance_performance?orgId=${__org.id}&var-instance_id=${__data.fields.host_id}&from=${__from}&to=${__to}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (max)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Max usage"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (mean)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Average usage"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 52
      },
      "id": 27,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum by (host_id) (\n  rate(system_network_io_bytes_total{\n    host_id=~\".*\",\n    cloud_region=~\"${location:regex}\",\n    direction=\"transmit\",\n    device=~\".*\",\n    fleet_id=\"$fleet_id\"\n  }[$__rate_interval])\n)",
          "format": "table",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Top 20 EC2 instances by Network Out consumption",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Value": {
                "aggregations": [
                  "max",
                  "mean"
                ],
                "operation": "aggregate"
              },
              "host_id": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "Value (mean)"
              }
            ]
          }
        },
        {
          "id": "limit",
          "options": {
            "limitField": 20
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 60
      },
      "id": 17,
      "panels": [],
      "title": "Disk summary",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "#### What it means\nDisk performance metrics:\n- Operations I/O: Read/write operations per second\n- Bytes I/O: Data transfer volume\n- Operation Time: Time spent on disk operations\n\n#### Why is it important?\n- Identifies disk bottlenecks\n- Monitors storage performance\n- Helps optimize I/O patterns\n\n#### How to identify the root cause\n- Check if it is across all instances or this instance only. You can refer to the table beside it to determine this. You may then navigate to the instance's performance graph to dive deeper.\n- Investigate game session graphs to figure out if the game server build is causing problems.\n- Check if it is caused by a specific game session or all game sessions.\n\n#### How to mitigate the issue\n- Adjust the number of concurrent game servers running on the instance\n- Adjust the instance type of the fleet\n- Make changes to optimize the game server code",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 61
      },
      "id": 21,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "avg(\n  sum by (host_id) (\n    rate(system_disk_io_bytes_total{\n      direction=\"write\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "instant": false,
          "legendFormat": "Mean",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(\n  sum by (host_id) (\n    rate(system_disk_io_bytes_total{\n      direction=\"write\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Max",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "min(\n  sum by (host_id) (\n    rate(system_disk_io_bytes_total{\n      direction=\"write\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Min",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.99,\n  sum by (host_id) (\n    rate(system_disk_io_bytes_total{\n      direction=\"write\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P99",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.95,\n  sum by (host_id) (\n    rate(system_disk_io_bytes_total{\n      direction=\"write\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P95",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.90,\n  sum by (host_id) (\n    rate(system_disk_io_bytes_total{\n      direction=\"write\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "interval": "",
          "legendFormat": "P90",
          "range": true,
          "refId": "F"
        }
      ],
      "title": "Disk write bytes",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "host_id"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Instance ID"
              },
              {
                "id": "custom.filterable"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "",
                    "url": "/d/instance_performance?orgId=${__org.id}&var-instance_id=${__data.fields.host_id}&from=${__from}&to=${__to}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (max)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Max usage"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (mean)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Average usage"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 61
      },
      "id": 28,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum by (host_id) (\n  rate(system_disk_io_bytes_total{\n    direction=\"write\",\n    cloud_region=~\"${location:regex}\",\n    fleet_id=\"$fleet_id\"\n  }[$__rate_interval])\n)",
          "format": "table",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Top 20 EC2 instances by Disk Write",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Value": {
                "aggregations": [
                  "max",
                  "mean"
                ],
                "operation": "aggregate"
              },
              "host_id": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "Value (mean)"
              }
            ]
          }
        },
        {
          "id": "limit",
          "options": {
            "limitField": 20
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "#### What it means\nDisk performance metrics:\n- Operations I/O: Read/write operations per second\n- Bytes I/O: Data transfer volume\n- Operation Time: Time spent on disk operations\n\n#### Why is it important?\n- Identifies disk bottlenecks\n- Monitors storage performance\n- Helps optimize I/O patterns\n\n#### How to identify the root cause\n- Check if it is across all instances or this instance only. You can refer to the table beside it to determine this. You may then navigate to the instance's performance graph to dive deeper.\n- Investigate game session graphs to figure out if the game server build is causing problems.\n- Check if it is caused by a specific game session or all game sessions.\n\n#### How to mitigate the issue\n- Adjust the number of concurrent game servers running on the instance\n- Adjust the instance type of the fleet\n- Make changes to optimize the game server code",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ops"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 69
      },
      "id": 19,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "avg(\n  sum by (host_id) (\n    rate(system_disk_operations_total{\n      direction=\"write\", \n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "instant": false,
          "legendFormat": "Mean",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(\n  sum by (host_id) (\n    rate(system_disk_operations_total{\n      direction=\"write\", \n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Max",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "min(\n  sum by (host_id) (\n    rate(system_disk_operations_total{\n      direction=\"write\", \n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Min",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.99,\n  sum by (host_id) (\n    rate(system_disk_operations_total{\n      direction=\"write\", \n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P99",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.95,\n  sum by (host_id) (\n    rate(system_disk_operations_total{\n      direction=\"write\", \n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P95",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.90,\n  sum by (host_id) (\n    rate(system_disk_operations_total{\n      direction=\"write\", \n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P90",
          "range": true,
          "refId": "F"
        }
      ],
      "title": "Disk write ops",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ops"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "host_id"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Instance ID"
              },
              {
                "id": "custom.filterable"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "",
                    "url": "/d/instance_performance?orgId=${__org.id}&var-instance_id=${__data.fields.host_id}&from=${__from}&to=${__to}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (max)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Max usage"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (mean)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Average usage"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 69
      },
      "id": 29,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum by (host_id) (\n  rate(system_disk_operations_total{\n    direction=\"write\", \n    cloud_region=~\"${location:regex}\",\n    fleet_id=\"$fleet_id\"\n  }[$__rate_interval])\n)",
          "format": "table",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Top 20 EC2 instances by Disk Write operations",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Value": {
                "aggregations": [
                  "max",
                  "mean"
                ],
                "operation": "aggregate"
              },
              "host_id": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "Value (mean)"
              }
            ]
          }
        },
        {
          "id": "limit",
          "options": {
            "limitField": 20
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "#### What it means\nDisk performance metrics:\n- Operations I/O: Read/write operations per second\n- Bytes I/O: Data transfer volume\n- Operation Time: Time spent on disk operations\n\n#### Why is it important?\n- Identifies disk bottlenecks\n- Monitors storage performance\n- Helps optimize I/O patterns\n\n#### How to identify the root cause\n- Check if it is across all instances or this instance only. You can refer to the table beside it to determine this. You may then navigate to the instance's performance graph to dive deeper.\n- Investigate game session graphs to figure out if the game server build is causing problems.\n- Check if it is caused by a specific game session or all game sessions.\n\n#### How to mitigate the issue\n- Adjust the number of concurrent game servers running on the instance\n- Adjust the instance type of the fleet\n- Make changes to optimize the game server code",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 77
      },
      "id": 20,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "avg(\n  sum by (host_id) (\n    rate(system_disk_io_bytes_total{\n      direction=\"read\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "instant": false,
          "legendFormat": "Mean",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(\n  sum by (host_id) (\n    rate(system_disk_io_bytes_total{\n      direction=\"read\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Max",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "min(\n  sum by (host_id) (\n    rate(system_disk_io_bytes_total{\n      direction=\"read\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Min",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.99,\n  sum by (host_id) (\n    rate(system_disk_io_bytes_total{\n      direction=\"read\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P99",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.95,\n  sum by (host_id) (\n    rate(system_disk_io_bytes_total{\n      direction=\"read\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "interval": "",
          "legendFormat": "P95",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.90,\n  sum by (host_id) (\n    rate(system_disk_io_bytes_total{\n      direction=\"read\",\n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P90",
          "range": true,
          "refId": "F"
        }
      ],
      "title": "Disk read bytes",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "host_id"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Instance ID"
              },
              {
                "id": "custom.filterable"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "",
                    "url": "/d/instance_performance?orgId=${__org.id}&var-instance_id=${__data.fields.host_id}&from=${__from}&to=${__to}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (max)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Max usage"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (mean)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Average usage"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 77
      },
      "id": 30,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum by (host_id) (\n  rate(system_disk_io_bytes_total{\n    direction=\"read\",\n    cloud_region=~\"${location:regex}\",\n    fleet_id=\"$fleet_id\"\n  }[$__rate_interval])\n)",
          "format": "table",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Top 20 EC2 instances by Disk Read",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Value": {
                "aggregations": [
                  "max",
                  "mean"
                ],
                "operation": "aggregate"
              },
              "host_id": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "Value (mean)"
              }
            ]
          }
        },
        {
          "id": "limit",
          "options": {
            "limitField": 20
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "#### What it means\nDisk performance metrics:\n- Operations I/O: Read/write operations per second\n- Bytes I/O: Data transfer volume\n- Operation Time: Time spent on disk operations\n\n#### Why is it important?\n- Identifies disk bottlenecks\n- Monitors storage performance\n- Helps optimize I/O patterns\n\n#### How to identify the root cause\n- Check if it is across all instances or this instance only. You can refer to the table beside it to determine this. You may then navigate to the instance's performance graph to dive deeper.\n- Investigate game session graphs to figure out if the game server build is causing problems.\n- Check if it is caused by a specific game session or all game sessions.\n\n#### How to mitigate the issue\n- Adjust the number of concurrent game servers running on the instance\n- Adjust the instance type of the fleet\n- Make changes to optimize the game server code",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ops"
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "Mean"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 85
      },
      "id": 16,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "avg(\n  sum by (host_id) (\n    rate(system_disk_operations_total{\n      direction=\"read\", \n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "instant": false,
          "legendFormat": "Mean",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(\n  sum by (host_id) (\n    rate(system_disk_operations_total{\n      direction=\"read\", \n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "Max",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "min(\n  sum by (host_id) (\n    rate(system_disk_operations_total{\n      direction=\"read\", \n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)\n",
          "hide": false,
          "instant": false,
          "legendFormat": "Min",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.99,\n  sum by (host_id) (\n    rate(system_disk_operations_total{\n      direction=\"read\", \n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P99",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.95,\n  sum by (host_id) (\n    rate(system_disk_operations_total{\n      direction=\"read\", \n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P95",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "quantile(0.90,\n  sum by (host_id) (\n    rate(system_disk_operations_total{\n      direction=\"read\", \n      cloud_region=~\"${location:regex}\",\n      fleet_id=\"$fleet_id\"\n    }[$__rate_interval])\n  )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "P90",
          "range": true,
          "refId": "F"
        }
      ],
      "title": "Disk read ops",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ops"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "host_id"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Instance ID"
              },
              {
                "id": "custom.filterable"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "",
                    "url": "/d/instance_performance?orgId=${__org.id}&var-instance_id=${__data.fields.host_id}&from=${__from}&to=${__to}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (max)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Max usage"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (mean)"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Average usage"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 85
      },
      "id": 31,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum by (host_id) (\n  rate(system_disk_operations_total{\n    direction=\"read\", \n    cloud_region=~\"${location:regex}\",\n    fleet_id=\"$fleet_id\"\n  }[$__rate_interval])\n)",
          "format": "table",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Top 20 EC2 instances by Disk Read operations",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Value": {
                "aggregations": [
                  "max",
                  "mean"
                ],
                "operation": "aggregate"
              },
              "host_id": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "Value (mean)"
              }
            ]
          }
        },
        {
          "id": "limit",
          "options": {
            "limitField": 20
          }
        }
      ],
      "type": "table"
    }
  ],
  "schemaVersion": 39,
  "tags": [
    "gamelift",
    "ec2",
    "instance",
    "overview"
  ],
  "templating": {
    "list": [
      {
        "allValue": ".+",
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_PROMETHEUS}"
        },
        "definition": "label_values(host_type)",
        "hide": 0,
        "includeAll": true,
        "label": "Instance Type",
        "multi": false,
        "name": "instance_type",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(host_type)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_PROMETHEUS}"
        },
        "definition": "label_values({host_type=~\"$instance_type\", deployment_type=\"EC2\"},fleet_id)",
        "hide": 0,
        "includeAll": false,
        "label": "Fleet ID",
        "multi": false,
        "name": "fleet_id",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values({host_type=~\"$instance_type\", deployment_type=\"EC2\"},fleet_id)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_PROMETHEUS}"
        },
        "definition": "label_values({fleet_id=\"$fleet_id\"},host_type)",
        "hide": 2,
        "includeAll": false,
        "label": "Instance Type of Fleet (read only)",
        "multi": false,
        "name": "instance_type_of_fleet",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values({fleet_id=\"$fleet_id\"},host_type)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": "",
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_PROMETHEUS}"
        },
        "definition": "label_values({fleet_id=\"$fleet_id\"},cloud_region)",
        "hide": 0,
        "includeAll": true,
        "label": "Location",
        "multi": true,
        "name": "location",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values({fleet_id=\"$fleet_id\"},cloud_region)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Instances Overview",
  "uid": "instance_overview",
  "version": 6,
  "weekStart": ""
}
